// Do not edit this file manually it is auto-generated during the build based on the .resx file for this project.
namespace System
{
    internal static partial class SR
    {
#pragma warning disable 0414
        private const string s_resourcesName = "FxResources.System.Net.Http.SR";
#pragma warning restore 0414

#if !DEBUGRESOURCES
        internal static string net_securityprotocolnotsupported {
              get { return SR.GetResourceString("net_securityprotocolnotsupported", null); }
        }
        internal static string net_http_httpmethod_format_error {
              get { return SR.GetResourceString("net_http_httpmethod_format_error", null); }
        }
        internal static string net_http_reasonphrase_format_error {
              get { return SR.GetResourceString("net_http_reasonphrase_format_error", null); }
        }
        internal static string net_http_copyto_array_too_small {
              get { return SR.GetResourceString("net_http_copyto_array_too_small", null); }
        }
        internal static string net_http_headers_not_found {
              get { return SR.GetResourceString("net_http_headers_not_found", null); }
        }
        internal static string net_http_headers_single_value_header {
              get { return SR.GetResourceString("net_http_headers_single_value_header", null); }
        }
        internal static string net_http_headers_invalid_header_name {
              get { return SR.GetResourceString("net_http_headers_invalid_header_name", null); }
        }
        internal static string net_http_headers_invalid_value {
              get { return SR.GetResourceString("net_http_headers_invalid_value", null); }
        }
        internal static string net_http_headers_not_allowed_header_name {
              get { return SR.GetResourceString("net_http_headers_not_allowed_header_name", null); }
        }
        internal static string net_http_headers_invalid_host_header {
              get { return SR.GetResourceString("net_http_headers_invalid_host_header", null); }
        }
        internal static string net_http_headers_invalid_from_header {
              get { return SR.GetResourceString("net_http_headers_invalid_from_header", null); }
        }
        internal static string net_http_headers_invalid_etag_name {
              get { return SR.GetResourceString("net_http_headers_invalid_etag_name", null); }
        }
        internal static string net_http_headers_invalid_range {
              get { return SR.GetResourceString("net_http_headers_invalid_range", null); }
        }
        internal static string net_http_headers_no_newlines {
              get { return SR.GetResourceString("net_http_headers_no_newlines", null); }
        }
        internal static string net_http_content_buffersize_exceeded {
              get { return SR.GetResourceString("net_http_content_buffersize_exceeded", null); }
        }
        internal static string net_http_content_no_task_returned {
              get { return SR.GetResourceString("net_http_content_no_task_returned", null); }
        }
        internal static string net_http_content_stream_already_read {
              get { return SR.GetResourceString("net_http_content_stream_already_read", null); }
        }
        internal static string net_http_content_readonly_stream {
              get { return SR.GetResourceString("net_http_content_readonly_stream", null); }
        }
        internal static string net_http_content_invalid_charset {
              get { return SR.GetResourceString("net_http_content_invalid_charset", null); }
        }
        internal static string net_http_content_stream_copy_error {
              get { return SR.GetResourceString("net_http_content_stream_copy_error", null); }
        }
        internal static string net_http_argument_empty_string {
              get { return SR.GetResourceString("net_http_argument_empty_string", null); }
        }
        internal static string net_http_client_request_already_sent {
              get { return SR.GetResourceString("net_http_client_request_already_sent", null); }
        }
        internal static string net_http_operation_started {
              get { return SR.GetResourceString("net_http_operation_started", null); }
        }
        internal static string net_http_client_execution_error {
              get { return SR.GetResourceString("net_http_client_execution_error", null); }
        }
        internal static string net_http_client_absolute_baseaddress_required {
              get { return SR.GetResourceString("net_http_client_absolute_baseaddress_required", null); }
        }
        internal static string net_http_client_invalid_requesturi {
              get { return SR.GetResourceString("net_http_client_invalid_requesturi", null); }
        }
        internal static string net_http_client_http_baseaddress_required {
              get { return SR.GetResourceString("net_http_client_http_baseaddress_required", null); }
        }
        internal static string net_http_parser_invalid_base64_string {
              get { return SR.GetResourceString("net_http_parser_invalid_base64_string", null); }
        }
        internal static string net_http_handler_noresponse {
              get { return SR.GetResourceString("net_http_handler_noresponse", null); }
        }
        internal static string net_http_handler_norequest {
              get { return SR.GetResourceString("net_http_handler_norequest", null); }
        }
        internal static string net_http_message_not_success_statuscode {
              get { return SR.GetResourceString("net_http_message_not_success_statuscode", null); }
        }
        internal static string net_http_content_field_too_long {
              get { return SR.GetResourceString("net_http_content_field_too_long", null); }
        }
        internal static string net_http_log_headers_no_newlines {
              get { return SR.GetResourceString("net_http_log_headers_no_newlines", null); }
        }
        internal static string net_http_log_headers_invalid_quality {
              get { return SR.GetResourceString("net_http_log_headers_invalid_quality", null); }
        }
        internal static string net_http_log_headers_wrong_email_format {
              get { return SR.GetResourceString("net_http_log_headers_wrong_email_format", null); }
        }
        internal static string net_http_handler_not_assigned {
              get { return SR.GetResourceString("net_http_handler_not_assigned", null); }
        }
        internal static string net_http_invalid_enable_first {
              get { return SR.GetResourceString("net_http_invalid_enable_first", null); }
        }
        internal static string net_http_content_buffersize_limit {
              get { return SR.GetResourceString("net_http_content_buffersize_limit", null); }
        }
        internal static string net_http_value_not_supported {
              get { return SR.GetResourceString("net_http_value_not_supported", null); }
        }
        internal static string net_http_io_read {
              get { return SR.GetResourceString("net_http_io_read", null); }
        }
        internal static string net_http_io_read_incomplete {
              get { return SR.GetResourceString("net_http_io_read_incomplete", null); }
        }
        internal static string net_http_io_write {
              get { return SR.GetResourceString("net_http_io_write", null); }
        }
        internal static string net_http_chunked_not_allowed_with_empty_content {
              get { return SR.GetResourceString("net_http_chunked_not_allowed_with_empty_content", null); }
        }
        internal static string net_http_invalid_cookiecontainer {
              get { return SR.GetResourceString("net_http_invalid_cookiecontainer", null); }
        }
        internal static string net_http_invalid_proxyusepolicy {
              get { return SR.GetResourceString("net_http_invalid_proxyusepolicy", null); }
        }
        internal static string net_http_invalid_proxy {
              get { return SR.GetResourceString("net_http_invalid_proxy", null); }
        }
        internal static string net_http_handler_nocontentlength {
              get { return SR.GetResourceString("net_http_handler_nocontentlength", null); }
        }
        internal static string net_http_value_must_be_greater_than {
              get { return SR.GetResourceString("net_http_value_must_be_greater_than", null); }
        }
        internal static string MailHeaderFieldInvalidCharacter {
              get { return SR.GetResourceString("MailHeaderFieldInvalidCharacter", null); }
        }
        internal static string MailAddressInvalidFormat {
              get { return SR.GetResourceString("MailAddressInvalidFormat", null); }
        }
        internal static string MailHeaderFieldMalformedHeader {
              get { return SR.GetResourceString("MailHeaderFieldMalformedHeader", null); }
        }
        internal static string InvalidHeaderName {
              get { return SR.GetResourceString("InvalidHeaderName", null); }
        }
        internal static string net_cookie_attribute {
              get { return SR.GetResourceString("net_cookie_attribute", null); }
        }
        internal static string net_http_unix_invalid_credential {
              get { return SR.GetResourceString("net_http_unix_invalid_credential", null); }
        }
        internal static string net_http_unix_https_support_unavailable_libcurl {
              get { return SR.GetResourceString("net_http_unix_https_support_unavailable_libcurl", null); }
        }
        internal static string ArgumentOutOfRange_FileLengthTooBig {
              get { return SR.GetResourceString("ArgumentOutOfRange_FileLengthTooBig", null); }
        }
        internal static string IO_FileExists_Name {
              get { return SR.GetResourceString("IO_FileExists_Name", null); }
        }
        internal static string IO_FileNotFound {
              get { return SR.GetResourceString("IO_FileNotFound", null); }
        }
        internal static string IO_FileNotFound_FileName {
              get { return SR.GetResourceString("IO_FileNotFound_FileName", null); }
        }
        internal static string IO_PathNotFound_NoPathName {
              get { return SR.GetResourceString("IO_PathNotFound_NoPathName", null); }
        }
        internal static string IO_PathNotFound_Path {
              get { return SR.GetResourceString("IO_PathNotFound_Path", null); }
        }
        internal static string IO_PathTooLong {
              get { return SR.GetResourceString("IO_PathTooLong", null); }
        }
        internal static string IO_SharingViolation_File {
              get { return SR.GetResourceString("IO_SharingViolation_File", null); }
        }
        internal static string IO_SharingViolation_NoFileName {
              get { return SR.GetResourceString("IO_SharingViolation_NoFileName", null); }
        }
        internal static string UnauthorizedAccess_IODenied_NoPathName {
              get { return SR.GetResourceString("UnauthorizedAccess_IODenied_NoPathName", null); }
        }
        internal static string UnauthorizedAccess_IODenied_Path {
              get { return SR.GetResourceString("UnauthorizedAccess_IODenied_Path", null); }
        }
        internal static string net_http_content_no_concurrent_reads {
              get { return SR.GetResourceString("net_http_content_no_concurrent_reads", null); }
        }
        internal static string net_http_username_empty_string {
              get { return SR.GetResourceString("net_http_username_empty_string", null); }
        }
        internal static string net_http_no_concurrent_io_allowed {
              get { return SR.GetResourceString("net_http_no_concurrent_io_allowed", null); }
        }
        internal static string net_http_unix_invalid_response {
              get { return SR.GetResourceString("net_http_unix_invalid_response", null); }
        }
        internal static string net_http_unix_handler_disposed {
              get { return SR.GetResourceString("net_http_unix_handler_disposed", null); }
        }
        internal static string net_http_buffer_insufficient_length {
              get { return SR.GetResourceString("net_http_buffer_insufficient_length", null); }
        }
        internal static string net_http_response_headers_exceeded_length {
              get { return SR.GetResourceString("net_http_response_headers_exceeded_length", null); }
        }
        internal static string ArgumentOutOfRange_NeedPosNum {
              get { return SR.GetResourceString("ArgumentOutOfRange_NeedPosNum", null); }
        }
        internal static string NotSupported_UnreadableStream {
              get { return SR.GetResourceString("NotSupported_UnreadableStream", null); }
        }
        internal static string NotSupported_UnwritableStream {
              get { return SR.GetResourceString("NotSupported_UnwritableStream", null); }
        }
        internal static string ObjectDisposed_StreamClosed {
              get { return SR.GetResourceString("ObjectDisposed_StreamClosed", null); }
        }
        internal static string net_http_libcurl_callback_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_callback_notsupported", null); }
        }
        internal static string net_http_libcurl_clientcerts_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_clientcerts_notsupported", null); }
        }
        internal static string net_http_libcurl_revocation_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_revocation_notsupported", null); }
        }
        internal static string net_http_feature_requires_Windows10Version1607 {
              get { return SR.GetResourceString("net_http_feature_requires_Windows10Version1607", null); }
        }
        internal static string net_http_feature_UWPClientCertSupportRequiresCertInPersonalCertificateStore {
              get { return SR.GetResourceString("net_http_feature_UWPClientCertSupportRequiresCertInPersonalCertificateStore", null); }
        }
#else
        internal static string net_securityprotocolnotsupported {
              get { return SR.GetResourceString("net_securityprotocolnotsupported", @"The requested security protocol is not supported."); }
        }
        internal static string net_http_httpmethod_format_error {
              get { return SR.GetResourceString("net_http_httpmethod_format_error", @"The format of the HTTP method is invalid."); }
        }
        internal static string net_http_reasonphrase_format_error {
              get { return SR.GetResourceString("net_http_reasonphrase_format_error", @"The reason phrase must not contain new-line characters."); }
        }
        internal static string net_http_copyto_array_too_small {
              get { return SR.GetResourceString("net_http_copyto_array_too_small", @"The number of elements is greater than the available space from arrayIndex to the end of the destination array."); }
        }
        internal static string net_http_headers_not_found {
              get { return SR.GetResourceString("net_http_headers_not_found", @"The given header was not found."); }
        }
        internal static string net_http_headers_single_value_header {
              get { return SR.GetResourceString("net_http_headers_single_value_header", @"Cannot add value because header '{0}' does not support multiple values."); }
        }
        internal static string net_http_headers_invalid_header_name {
              get { return SR.GetResourceString("net_http_headers_invalid_header_name", @"The header name format is invalid."); }
        }
        internal static string net_http_headers_invalid_value {
              get { return SR.GetResourceString("net_http_headers_invalid_value", @"The format of value '{0}' is invalid."); }
        }
        internal static string net_http_headers_not_allowed_header_name {
              get { return SR.GetResourceString("net_http_headers_not_allowed_header_name", @"Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects."); }
        }
        internal static string net_http_headers_invalid_host_header {
              get { return SR.GetResourceString("net_http_headers_invalid_host_header", @"The specified value is not a valid 'Host' header string."); }
        }
        internal static string net_http_headers_invalid_from_header {
              get { return SR.GetResourceString("net_http_headers_invalid_from_header", @"The specified value is not a valid 'From' header string."); }
        }
        internal static string net_http_headers_invalid_etag_name {
              get { return SR.GetResourceString("net_http_headers_invalid_etag_name", @"The specified value is not a valid quoted string."); }
        }
        internal static string net_http_headers_invalid_range {
              get { return SR.GetResourceString("net_http_headers_invalid_range", @"Invalid range. At least one of the two parameters must not be null."); }
        }
        internal static string net_http_headers_no_newlines {
              get { return SR.GetResourceString("net_http_headers_no_newlines", @"New-line characters in header values must be followed by a white-space character."); }
        }
        internal static string net_http_content_buffersize_exceeded {
              get { return SR.GetResourceString("net_http_content_buffersize_exceeded", @"Cannot write more bytes to the buffer than the configured maximum buffer size: {0}."); }
        }
        internal static string net_http_content_no_task_returned {
              get { return SR.GetResourceString("net_http_content_no_task_returned", @"The async operation did not return a System.Threading.Tasks.Task object."); }
        }
        internal static string net_http_content_stream_already_read {
              get { return SR.GetResourceString("net_http_content_stream_already_read", @"The stream was already consumed. It cannot be read again."); }
        }
        internal static string net_http_content_readonly_stream {
              get { return SR.GetResourceString("net_http_content_readonly_stream", @"The stream does not support writing."); }
        }
        internal static string net_http_content_invalid_charset {
              get { return SR.GetResourceString("net_http_content_invalid_charset", @"The character set provided in ContentType is invalid. Cannot read content as string using an invalid character set."); }
        }
        internal static string net_http_content_stream_copy_error {
              get { return SR.GetResourceString("net_http_content_stream_copy_error", @"Error while copying content to a stream."); }
        }
        internal static string net_http_argument_empty_string {
              get { return SR.GetResourceString("net_http_argument_empty_string", @"The value cannot be null or empty."); }
        }
        internal static string net_http_client_request_already_sent {
              get { return SR.GetResourceString("net_http_client_request_already_sent", @"The request message was already sent. Cannot send the same request message multiple times."); }
        }
        internal static string net_http_operation_started {
              get { return SR.GetResourceString("net_http_operation_started", @"This instance has already started one or more requests. Properties can only be modified before sending the first request."); }
        }
        internal static string net_http_client_execution_error {
              get { return SR.GetResourceString("net_http_client_execution_error", @"An error occurred while sending the request."); }
        }
        internal static string net_http_client_absolute_baseaddress_required {
              get { return SR.GetResourceString("net_http_client_absolute_baseaddress_required", @"The base address must be an absolute URI."); }
        }
        internal static string net_http_client_invalid_requesturi {
              get { return SR.GetResourceString("net_http_client_invalid_requesturi", @"An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set."); }
        }
        internal static string net_http_client_http_baseaddress_required {
              get { return SR.GetResourceString("net_http_client_http_baseaddress_required", @"Only 'http' and 'https' schemes are allowed."); }
        }
        internal static string net_http_parser_invalid_base64_string {
              get { return SR.GetResourceString("net_http_parser_invalid_base64_string", @"Value '{0}' is not a valid Base64 string. Error: {1}"); }
        }
        internal static string net_http_handler_noresponse {
              get { return SR.GetResourceString("net_http_handler_noresponse", @"Handler did not return a response message."); }
        }
        internal static string net_http_handler_norequest {
              get { return SR.GetResourceString("net_http_handler_norequest", @"A request message must be provided. It cannot be null."); }
        }
        internal static string net_http_message_not_success_statuscode {
              get { return SR.GetResourceString("net_http_message_not_success_statuscode", @"Response status code does not indicate success: {0} ({1})."); }
        }
        internal static string net_http_content_field_too_long {
              get { return SR.GetResourceString("net_http_content_field_too_long", @"The field cannot be longer than {0} characters."); }
        }
        internal static string net_http_log_headers_no_newlines {
              get { return SR.GetResourceString("net_http_log_headers_no_newlines", @"Value for header '{0}' contains invalid new-line characters. Value: '{1}'."); }
        }
        internal static string net_http_log_headers_invalid_quality {
              get { return SR.GetResourceString("net_http_log_headers_invalid_quality", @"The 'q' value is invalid: '{0}'."); }
        }
        internal static string net_http_log_headers_wrong_email_format {
              get { return SR.GetResourceString("net_http_log_headers_wrong_email_format", @"Value '{0}' is not a valid email address. Error: {1}"); }
        }
        internal static string net_http_handler_not_assigned {
              get { return SR.GetResourceString("net_http_handler_not_assigned", @"The inner handler has not been assigned."); }
        }
        internal static string net_http_invalid_enable_first {
              get { return SR.GetResourceString("net_http_invalid_enable_first", @"The {0} property must be set to '{1}' to use this property."); }
        }
        internal static string net_http_content_buffersize_limit {
              get { return SR.GetResourceString("net_http_content_buffersize_limit", @"Buffering more than {0} bytes is not supported."); }
        }
        internal static string net_http_value_not_supported {
              get { return SR.GetResourceString("net_http_value_not_supported", @"The value '{0}' is not supported for property '{1}'."); }
        }
        internal static string net_http_io_read {
              get { return SR.GetResourceString("net_http_io_read", @"The read operation failed, see inner exception."); }
        }
        internal static string net_http_io_read_incomplete {
              get { return SR.GetResourceString("net_http_io_read_incomplete", @"Unable to read data from the transport connection. The connection was closed before all data could be read. Expected {0} bytes, read {1} bytes."); }
        }
        internal static string net_http_io_write {
              get { return SR.GetResourceString("net_http_io_write", @"The write operation failed, see inner exception."); }
        }
        internal static string net_http_chunked_not_allowed_with_empty_content {
              get { return SR.GetResourceString("net_http_chunked_not_allowed_with_empty_content", @"'Transfer-Encoding: chunked' header can not be used when content object is not specified."); }
        }
        internal static string net_http_invalid_cookiecontainer {
              get { return SR.GetResourceString("net_http_invalid_cookiecontainer", @"When using CookieUsePolicy.UseSpecifiedCookieContainer, the CookieContainer property must not be null."); }
        }
        internal static string net_http_invalid_proxyusepolicy {
              get { return SR.GetResourceString("net_http_invalid_proxyusepolicy", @"When using a non-null Proxy, the WindowsProxyUsePolicy property must be set to WindowsProxyUsePolicy.UseCustomProxy."); }
        }
        internal static string net_http_invalid_proxy {
              get { return SR.GetResourceString("net_http_invalid_proxy", @"When using WindowsProxyUsePolicy.UseCustomProxy, the Proxy property must not be null."); }
        }
        internal static string net_http_handler_nocontentlength {
              get { return SR.GetResourceString("net_http_handler_nocontentlength", @"The content length of the request content can't be determined. Either set TransferEncodingChunked to true, load content into buffer, or set MaxRequestContentBufferSize."); }
        }
        internal static string net_http_value_must_be_greater_than {
              get { return SR.GetResourceString("net_http_value_must_be_greater_than", @"The specified value must be greater than {0}."); }
        }
        internal static string MailHeaderFieldInvalidCharacter {
              get { return SR.GetResourceString("MailHeaderFieldInvalidCharacter", @"An invalid character was found in the mail header: '{0}'."); }
        }
        internal static string MailAddressInvalidFormat {
              get { return SR.GetResourceString("MailAddressInvalidFormat", @"The specified string is not in the form required for an e-mail address."); }
        }
        internal static string MailHeaderFieldMalformedHeader {
              get { return SR.GetResourceString("MailHeaderFieldMalformedHeader", @"The mail header is malformed."); }
        }
        internal static string InvalidHeaderName {
              get { return SR.GetResourceString("InvalidHeaderName", @"An invalid character was found in header name."); }
        }
        internal static string net_cookie_attribute {
              get { return SR.GetResourceString("net_cookie_attribute", @"The '{0}'='{1}' part of the cookie is invalid."); }
        }
        internal static string net_http_unix_invalid_credential {
              get { return SR.GetResourceString("net_http_unix_invalid_credential", @"The libcurl library in use ({0}) does not support different credentials for different authentication schemes."); }
        }
        internal static string net_http_unix_https_support_unavailable_libcurl {
              get { return SR.GetResourceString("net_http_unix_https_support_unavailable_libcurl", @"The libcurl library in use ({0}) does not support HTTPS."); }
        }
        internal static string ArgumentOutOfRange_FileLengthTooBig {
              get { return SR.GetResourceString("ArgumentOutOfRange_FileLengthTooBig", @"Specified file length was too large for the file system."); }
        }
        internal static string IO_FileExists_Name {
              get { return SR.GetResourceString("IO_FileExists_Name", @"The file '{0}' already exists."); }
        }
        internal static string IO_FileNotFound {
              get { return SR.GetResourceString("IO_FileNotFound", @"Unable to find the specified file."); }
        }
        internal static string IO_FileNotFound_FileName {
              get { return SR.GetResourceString("IO_FileNotFound_FileName", @"Could not find file '{0}'."); }
        }
        internal static string IO_PathNotFound_NoPathName {
              get { return SR.GetResourceString("IO_PathNotFound_NoPathName", @"Could not find a part of the path."); }
        }
        internal static string IO_PathNotFound_Path {
              get { return SR.GetResourceString("IO_PathNotFound_Path", @"Could not find a part of the path '{0}'."); }
        }
        internal static string IO_PathTooLong {
              get { return SR.GetResourceString("IO_PathTooLong", @"The specified file name or path is too long, or a component of the specified path is too long."); }
        }
        internal static string IO_SharingViolation_File {
              get { return SR.GetResourceString("IO_SharingViolation_File", @"The process cannot access the file '{0}' because it is being used by another process."); }
        }
        internal static string IO_SharingViolation_NoFileName {
              get { return SR.GetResourceString("IO_SharingViolation_NoFileName", @"The process cannot access the file because it is being used by another process."); }
        }
        internal static string UnauthorizedAccess_IODenied_NoPathName {
              get { return SR.GetResourceString("UnauthorizedAccess_IODenied_NoPathName", @"Access to the path is denied."); }
        }
        internal static string UnauthorizedAccess_IODenied_Path {
              get { return SR.GetResourceString("UnauthorizedAccess_IODenied_Path", @"Access to the path '{0}' is denied."); }
        }
        internal static string net_http_content_no_concurrent_reads {
              get { return SR.GetResourceString("net_http_content_no_concurrent_reads", @"The stream does not support concurrent read operations."); }
        }
        internal static string net_http_username_empty_string {
              get { return SR.GetResourceString("net_http_username_empty_string", @"The username for a credential object cannot be null or empty."); }
        }
        internal static string net_http_no_concurrent_io_allowed {
              get { return SR.GetResourceString("net_http_no_concurrent_io_allowed", @"The stream does not support concurrent I/O read or write operations."); }
        }
        internal static string net_http_unix_invalid_response {
              get { return SR.GetResourceString("net_http_unix_invalid_response", @"The server returned an invalid or unrecognized response."); }
        }
        internal static string net_http_unix_handler_disposed {
              get { return SR.GetResourceString("net_http_unix_handler_disposed", @"The handler was disposed of while active operations were in progress."); }
        }
        internal static string net_http_buffer_insufficient_length {
              get { return SR.GetResourceString("net_http_buffer_insufficient_length", @"The buffer was not long enough."); }
        }
        internal static string net_http_response_headers_exceeded_length {
              get { return SR.GetResourceString("net_http_response_headers_exceeded_length", @"The HTTP response headers length exceeded the set limit of {0} bytes."); }
        }
        internal static string ArgumentOutOfRange_NeedPosNum {
              get { return SR.GetResourceString("ArgumentOutOfRange_NeedPosNum", @"Positive number required."); }
        }
        internal static string NotSupported_UnreadableStream {
              get { return SR.GetResourceString("NotSupported_UnreadableStream", @"Stream does not support reading."); }
        }
        internal static string NotSupported_UnwritableStream {
              get { return SR.GetResourceString("NotSupported_UnwritableStream", @"Stream does not support writing."); }
        }
        internal static string ObjectDisposed_StreamClosed {
              get { return SR.GetResourceString("ObjectDisposed_StreamClosed", @"Can not access a closed Stream."); }
        }
        internal static string net_http_libcurl_callback_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_callback_notsupported", @"The handler does not support custom handling of certificates with this combination of libcurl ({0}) and its SSL backend (""{1}"")."); }
        }
        internal static string net_http_libcurl_clientcerts_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_clientcerts_notsupported", @"The handler does not support client authentication certificates with this combination of libcurl ({0}) and its SSL backend (""{1}"")."); }
        }
        internal static string net_http_libcurl_revocation_notsupported {
              get { return SR.GetResourceString("net_http_libcurl_revocation_notsupported", @"The handler does not support changing revocation settings with this combination of libcurl ({0}) and its SSL backend (""{1}"")."); }
        }
        internal static string net_http_feature_requires_Windows10Version1607 {
              get { return SR.GetResourceString("net_http_feature_requires_Windows10Version1607", @"Using this feature requires Windows 10 Version 1607."); }
        }
        internal static string net_http_feature_UWPClientCertSupportRequiresCertInPersonalCertificateStore {
              get { return SR.GetResourceString("net_http_feature_UWPClientCertSupportRequiresCertInPersonalCertificateStore", @"Client certificate was not found in the personal (\""MY\"") certificate store. In UWP, client certificates are only supported if they have been added to that certificate store."); }
        }

#endif
        internal static Type ResourceType {
              get { return typeof(FxResources.System.Net.Http.SR); }
        }
    }
}
namespace FxResources.System.Net.Http
{
    // The type of this class is used to create the ResourceManager instance as the type name matches the name of the embedded resources file
    internal static class SR
    {
    }
}
